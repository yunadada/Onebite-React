// 객체 타입 주의사항 1) 의도치 않게 값이 수정될 수 있음.
let a1 = { name: "이정환" };
let a2 = a1; // (얕은 복사)
a2.name = "홍길동"; // a1의 값 까지 변경됨. -> Sideeffect

let b1 = { name: "이정환" };
let b2 = { ...b1 }; // 새로운 객체를 생성해 내부 프로퍼티만 따로 복사해오는 방식 (깊은 복사)
b2.name = "홍길동"; // b2의 값만 변경됨.

// 객체 타입 주의사항 2) 객체간의 비교는 기본적으로 참조값을 기준으로 이루어짐.
let c1 = { name: "이정환" };
let c2 = c1;
let c3 = { ...c1 };

console.log(c1 === c2); // 참조값이 서로 같으므로 true
console.log(c1 === c3); // 같은 객체는 맞으나, 참조값이 서로 다르므로 false

// 참조값이 아닌 프로퍼티를 기준으로 두 객체 비교하는 경우
console.log(JSON.stringify(c1) === JSON.stringify(c3)); // true

// 객체 타입 주의사항 3) 배열과 함수도 객체임 -> 추가적인 메서드나 프로퍼티를 가질 수 있음.
